// BASE DE DONNEE // 

DROP DATABASE IF EXISTS clicom;

CREATE DATABASE clicom;

USE clicom;

CREATE TABLE clients (
cli_num INT PRIMARY KEY NOT NULL,
cli_nom VARCHAR (50),
cli_adresse VARCHAR(50),
cli_tel VARCHAR(30)
);

CREATE TABLE commande(
com_num INT PRIMARY KEY NOT NULL,
cli_num INT,
com_date datetime DEFAULT NULL,
com_obs VARCHAR(50)
);

CREATE TABLE produit(
pro_num INT PRIMARY KEY NOT NULL,
pro_libelle VARCHAR(50),
pro_description VARCHAR(50)
);

CREATE TABLE est_compose (
com_num INT NOT NULL,
pro_num INT NOT NULL,
est_qte INT NOT NULL,
FOREIGN KEY (pro_num) REFERENCES produit(pro_num),
FOREIGN KEY (com_num) REFERENCES commande(com_num)
);

CREATE INDEX cli_nom ON clients(cli_nom);

// Exercices // 

Exercice 1 : 
SELECT * FROM customers WHERE country = 'France' 

Exercice 2 :
SELECT ProductID , ProductName , UnitPrice FROM products WHERE SupplierID = '1'

Exercice 3 : 

USE northwind;
SELECT DISTINCT suppliers.CompanyName, COUNT(products.ProductID) FROM suppliers INNER JOIN products ON suppliers.SupplierID = products.SupplierID WHERE Country='France' GROUP BY suppliers.SupplierID  ORDER BY COUNT(products.ProductID) DESC;

Exercice 4 : 
 SELECT ShipName AS "Client", count(orders.OrderID) AS "Nbre commandes"
FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID
WHERE ShipCountry LIKE "France"
GROUP BY Shipname;

Exercice 5:

SELECT ShipName,ShipCountry, SUM(products.UnitPrice)
FROM orders JOIN 'order details' ON orders.OrderID='order details'.OrderID JOIN products ON 'order details'.ProductID=products.ProductID
GROUP BY ShipName,ShipCountry;

Exercice 6 : 
SELECT ShipName,ShipCountry, SUM(products.UnitPrice)SELECT AVG(DATEDIFF(orders.ShippedDate,orders.OrderDate)) AS "Délai moyen de livraison en jours"
FROM orders;

SELECT DISTINCT customers.Country AS "Pays"
FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID 
JOIN `order details` ON products.ProductID = `order details`.ProductID 
JOIN orders ON `order details`.OrderID = orders.OrderID 
JOIN customers ON orders.CustomerID = customers.CustomerID
WHERE suppliers.CompanyName = "Exotic Liquids"
ORDER BY customers.Country asc;

Exercice 7 : 

SELECT sum(`order details`.UnitPrice),sum(`order details`.Quantity),orders.OrderDate 
FROM products JOIN `order details` ON products.ProductID = `order details`.ProductID JOIN orders ON `order details`.OrderID = orders.OrderID 
GROUP BY `order details`.UnitPrice
HAVING OrderDate = 1997; 

SELECT `order details`.UnitPrice,`order details`.Quantity,sum(`order details`.UnitPrice) + sum(`order details`.Quantity) AS "Total", OrderDate 
FROM products JOIN `order details` ON products.ProductID = `order details`.ProductID JOIN orders ON `order details`.OrderID = orders.OrderID
WHERE OrderDate > 1996;

SELECT sum(`order details`.UnitPrice) * sum(`order details`.Quantity) / COUNT(`order details`.OrderID) AS "Montant Ventes 97"
FROM products JOIN `order details` ON products.ProductID = `order details`.ProductID JOIN orders ON `order details`.OrderID = orders.OrderID
WHERE OrderDate BETWEEN 19970101 AND 19971231;

Exercice 8 : 

SELECT MONTH(orders.OrderDate) AS "Mois 97", sum(`order details`.UnitPrice) * sum(`order details`.Quantity) / COUNT(`order details`.OrderID) AS "Montant Ventes 97"
FROM products JOIN `order details` ON products.ProductID = `order details`.ProductID JOIN orders ON `order details`.OrderID = orders.OrderID
WHERE orders.OrderDate BETWEEN 19970101 AND 19971231
GROUP BY MONTH(orders.OrderDate);

Exercice 9 : 

SELECT orders.OrderDate AS "Date de dernière commande"
FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID
WHERE customers.CompanyName = "Du monde entier"
ORDER BY orders.OrderDate DESC
LIMIT 1; 

Exercice 10 : 

SELECT AVG(DATEDIFF(orders.ShippedDate,orders.OrderDate)) AS "Délai moyen de livraison en jours"
FROM orders;

;